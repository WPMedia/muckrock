# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-07-13 17:39


# Django
from django.db import migrations


def uniqify_addresses(apps, schema_editor):
    """Merge all addresses which should be unique"""
    Address = apps.get_model('communication', 'Address')
    MailCommunication = apps.get_model('communication', 'MailCommunication')
    AgencyAddress = apps.get_model('agency', 'AgencyAddress')
    FOIARequest = apps.get_model('foia', 'FOIARequest')
    duplicates = {}
    for address in Address.objects.all():
        addresses = Address.objects.filter(
            street=address.street,
            suite=address.suite,
            city=address.city,
            state=address.state,
            zip_code=address.zip_code,
            agency_override=address.agency_override,
            attn_override=address.attn_override,
            address=address.address,
        )
        if len(addresses) > 1:
            duplicates[(
                address.street,
                address.suite,
                address.city,
                address.state,
                address.zip_code,
                address.agency_override,
                address.attn_override,
                address.address,
            )] = addresses
    print(duplicates)
    for addresses in duplicates.values():
        main_address = addresses[0]
        for other_address in addresses[1:]:
            other_address.agencyaddress_set.all().update(address=main_address)
            other_address.to_mails.all().update(to_address=main_address)
            other_address.from_mails.all().update(from_address=main_address)
            other_address.foias.all().update(address=main_address)
            other_address.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('communication', '0011_auto_20180713_1457'),
        ('agency', '0020_auto_20180713_1455'),
        ('foia', '0060_auto_20180713_1455'),
    ]

    operations = [
        migrations.RunPython(uniqify_addresses, migrations.RunPython.noop),
    ]
